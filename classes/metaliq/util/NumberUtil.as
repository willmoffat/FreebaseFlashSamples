package metaliq.util{public class NumberUtil	{		static public function randomHex():Number {			var chars:String = "0123456789ABCDEF";	        var s:String = '';	        for (var i:Number = 0; i < 6; i++) {	                var c : Number = Math.floor(Math.random()*15);	                s += chars.substr(c,1);	        }	        var $hex :Number  = Number('0x' +  s);	        return $hex;		}		static public function pad(number : Number, pad : Number) : String {			var output : String = String(number);			var l : Number = Math.floor(number).toString().length;			if (l < pad) {				for (var i : Number = 0; i<(pad-l); i++) {					output = "0"+output;				}			}			return output;		}			static public function toByteFormat(number : Number) : String {			var mb : Number = number/(1024*1000);			return mb >= 1 ? round(mb,2)+' mb' : Math.round(number/1024)+' kb';		};		static public function round(number : Number, decimalPlaces : Number) : Number {			decimalPlaces = decimalPlaces ? decimalPlaces : 0;			return Math.round(number*Math.pow(10, decimalPlaces))*Math.pow(10, -decimalPlaces);		}		static public function randomRange(from:Number, to:Number):Number {			var range:Number = to-from;			var randomNumber:Number = Math.round(Math.random()*range);			randomNumber += from;			return randomNumber;		}			static public function degreesToRadians(d:Number) : Number		{			return d * (Math.PI / 180);		}		static public function radiansToDegrees(r:Number):Number		{			return r / (Math.PI / 180);		}	}}