////  StringUtil//  Created by Ketan Anjaria on 2006-10-27.//  Copyright (c) 2006 __MyCompanyName__. All rights reserved.//package metaliq.util {	import flash.display.*		import flash.text.*;	import flash.events.*;	import flash.net.*;	public class StringUtil {				static public var words:Array = [												"Lorem",											"Dolor",											"Consectetuer",											"Adipiscing",											"Mauris",											"Aliquet",											"Aliquam",											"Porta",											"Etiam",											"Consectetuer",											"Nullam",											"Suspendisse",											"Placerat",											"Consectetuer ",											"Lacus",											"Morbi",											"Sagittis",											"Sed",											"Commodo",											"Proin",											"Hendrerit",											"Vulputate",											"Cursus",											"Eros",											"In",											"Aliquam",											"Malesuada",											"Pretium"											];		static public var sentences:Array = [												"Lorem ipsum dolor sit amet, consectetuer adipiscing elit.",												"Nam a mauris at dui commodo nonummy.",												"Nulla egestas ultricies eros.",												"Nunc suscipit felis ut quam.",												"Sed consequat malesuada turpis.",												"Proin sit amet nunc nec nibh dignissim nonummy.",												"Suspendisse molestie lacus ac elit.",												"Aenean sagittis neque eget lectus.",												"Vivamus vulputate augue non tellus.",												"Phasellus sit amet est nec orci eleifend auctor.",												"Aliquam condimentum commodo tellus.",												"Aliquam sodales fermentum elit.",												"Donec nec ante quis ligula dictum ullamcorper.",												"Quisque eu pede et dolor lobortis molestie.",												"Duis vel libero sit amet ipsum placerat consectetuer.",												"Phasellus commodo vestibulum diam.",												"Nam ac felis non nulla fringilla consectetuer.",												"Pellentesque dignissim mi nec lectus.",												"Nunc malesuada tincidunt nulla.",												"Sed tristique tristique turpis.",												"Curabitur dapibus ligula id pede iaculis aliquam.",												"Ut pulvinar tincidunt nibh.",												"Integer lacinia velit non nisi.",												"Mauris cursus rhoncus velit.",												"Ut aliquet interdum enim.",												"Nullam non nibh non eros pulvinar viverra."												];		static public function getRandomWord():String{			return words[Math.floor (Math.random () * words.length)];		}		static public function getRandomSentence():String{			return sentences[Math.floor (Math.random () * sentences.length)];		}		static public function findWord (p_source:String, p_terminators:Object=null):String {						var $terminators = {};			$terminators[" "] = true;			$terminators[","] = true;			$terminators["<"] = true;			$terminators[">"] = true;						if(p_terminators == null) {				p_terminators = $terminators;			}			var length:Number = p_source.length;			var index:Number = -1;			for (var i:Number = 0; i < length; i++) {				var s:String = p_source.substr (i, 1);				if (p_terminators[s] == true) {					index = i;					break;				}			}			if (index == -1) {				return p_source;			} else {				var output:String = p_source.substring (0, index);				return output;			}		}		static public function createHref (p_url:String):String {			return "<U><A HREF=\"" + p_url + "\" TARGET=\"_blank\">" + p_url + "</A></U>";		}		static public function replaceStringAtIndex (p_source:String, p_index:Number, p_orig:String, p_replace:String):String {			var s1:String = p_source.substring (0, p_index);			var s2:String = p_source.substring (p_index + p_orig.length);			return s1 + p_replace + s2;		}		static public function replaceIndex (p_source:String, p_index:Number, p_replace:String):String {			var s1:String = p_source.substring (0, p_index - 1);			var s2:String = p_source.substring (p_index + 1);			return s1 + p_replace + s2;		}		static public function convertToHrefs (p_source:String):String {			var $terminators = {};			$terminators[" "] = true;			$terminators[","] = true;			$terminators["<"] = true;			$terminators[">"] = true;						var validUrlPrefixs:Object = {};			validUrlPrefixs["http"] = true;			validUrlPrefixs["www"] = true;			var length:Number = p_source.length;			var word:String = "";			var replaceData:Object = {};			for (var i:Number = 0; i < length; i++) {				var s:String = p_source.substr (i, 1);				if ($terminators[s] == true) {					word = "";				} else {					word += s;				}				if (validUrlPrefixs[word] == true) {					var startIndex:Number = i - (word.length - 1);					var url:String = findWord (p_source.substring (startIndex));					replaceData[Number (startIndex)] = {url:url, href:createHref (url)};					word = "";				}			}			for (var j:String in replaceData) {				p_source = replaceStringAtIndex (p_source, Number (j), replaceData[j].url, replaceData[j].href);			}			return p_source;		}	}}