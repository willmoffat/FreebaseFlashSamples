////  BrowserListItem//  Created by Ketan Anjaria on 2007-03-13.//  Copyright (c) 2007 __MyCompanyName__. All rights reserved.//package com.metaweb.samples.soundline {	import flash.display.*		import flash.text.*;	import flash.events.*;	import flash.net.*;		import metaliq.core.*	import metaliq.events.*;	public class BrowserListItem extends DynamicListItem {		public var lock_btn:FrameButton;		public var highlight:Sprite;		public var selectedBG:Sprite;		/**		 * Creates a new BrowserListItem component instance.		 * com.metaweb.samples.soundline.BrowserListItem		 */		public function BrowserListItem() { 			super();		}				override protected function configUI() : void {			super.configUI();			useHitRegion = true;			mouseChildren = true;			toggle = true;			lock_btn.visible = false;			lock_btn.toggle = true;			lock_btn.addEventListener("click", onClickLock, false, 0, true);		}		private function onClickLock(p_event:Event):void{			locked = !$locked			var event:DynamicListEvent = new DynamicListEvent(DynamicListEvent.CUSTOM,false,false,$column,$row);			event.item = this;			event.detail = "changeLock";			$listOwner.dispatchEvent(event);		}		override public function set dataModel(p_dataModel:*):void{			$dataModel = p_dataModel;			label_txt.text = $dataModel.name;						//update date from data model			selected = $dataModel.selected;			locked = $dataModel.locked;					}		protected var $locked:Boolean=false;		public function set locked(p_locked:Boolean):void{			$locked = p_locked;			$dataModel.locked = $locked;			lock_btn.selected = $locked;		}		public function get locked():Boolean{			return $locked;		}		override public function draw() : void {			var showHighlight:Boolean = false;			var showSelected:Boolean = $selected;									switch ( $frame ) {				case "trueOver":				case "falseOver" :					showHighlight = true					break;			}			highlight.visible = showHighlight;			selectedBG.visible = showSelected;			if($selected && $dataModel.isLockable) {				lock_btn.visible = true;			} else {				lock_btn.visible = false;			}			super.draw();		}		override public function set selected(p_selected:Boolean):void{			super.selected = p_selected;			$dataModel.selected = $selected;			if(!$selected) {				locked = false;			}		}			}}